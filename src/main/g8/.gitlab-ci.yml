variables:
  FF_NETWORK_PER_BUILD: 1
  DOCKER_HOST: tcp://docker:2375
  DOCKER_REGISTRY: \$DOCKER_REGISTRY
  DOCKER_REPOSITORY_NAME: \$DOCKER_REPOSITORY_NAME
  DOCKER_REPOSITORY_URI: '\$DOCKER_REGISTRY/\$DOCKER_REPOSITORY_NAME'
  AWS_CODEARTIFACT_DOMAIN: \$AWS_CODEARTIFACT_DOMAIN
  AWS_CODEARTIFACT_DOMAIN_OWNER: \$AWS_CODEARTIFACT_DOMAIN_OWNER
stages:
  - build
build-docker-image:
  stage: build
  environment:
    name: production
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain \$AWS_CODEARTIFACT_DOMAIN --domain-owner \$AWS_CODEARTIFACT_DOMAIN_OWNER --query authorizationToken --output text`
  script:
    - docker build -t \$DOCKER_REPOSITORY_URI:latest -t \$DOCKER_REPOSITORY_URI:\$CI_COMMIT_TAG --network=host .
    - aws ecr get-login-password | docker login --username AWS --password-stdin \$DOCKER_REGISTRY
    - docker push \$DOCKER_REPOSITORY_URI:latest
    - docker push \$DOCKER_REPOSITORY_URI:\$CI_COMMIT_TAG
  rules:
    - if: '\$CI_COMMIT_TAG != null'
      when: always
build-protobuf-idl:
  stage: build
  environment:
    name: production
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  before_script:
    - rm -f /etc/yum.repos.d/bintray-rpm.repo || true
    - curl -L https://www.scala-sbt.org/sbt-rpm.repo > sbt-rpm.repo
    - mv sbt-rpm.repo /etc/yum.repos.d/
    - yum install sbt
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain \$AWS_CODEARTIFACT_DOMAIN --domain-owner \$AWS_CODEARTIFACT_DOMAIN_OWNER --query authorizationToken --output text`
  script:
    - sbt $name;format="norm"$-protobuf/publish
  when: manual

