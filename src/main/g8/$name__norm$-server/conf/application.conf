# https://www.playframework.com/documentation/latest/Configuration

# For examples on additional grpc configurations, take a look at
# https://github.com/playframework/play-scala-grpc-example/blob/2.7.x/conf/application.conf
pekko {
    actor.typed.extensions = []

    grpc.client {

//        "helloworld.GreeterService" {
//            host = "example.com"
//            port = 9000
//            use-tls = false
//        }
    }
}

play {
    filters {
        enabled = []
    }

    modules {
        enabled += "modules.AppModule"
        enabled += "modules.DatabaseModule"
        enabled += "modules.GrpcModule"
//        enabled += "PekkoGrpcClientModule"
        disabled += "play.grpc.ClassicActorsystemProviderModule"
    }

    server {
        http {
            port = $app_port$
        }
    }

    http {
        secret {
            key = "changeme"
            key = \${?APP_$name;format="snake,upper"$_SECRET}
        }
    }
}

app-server {
    app {
        database {
            postgresql {
                profile = "$package$.db_utils.CustomPostgresProfile\$"
                db {
                    connectionPool = "HikariCP"
                    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
                    properties {
                        url = "jdbc:postgresql://localhost:5432/$name;format="lower,snake"$?stringtype=unspecified"
                        url = \${?APP_$name;format="snake,upper"$_DB_URL}
                        user = "postgres"
                        user = \${?APP_$name;format="snake,upper"$_DB_USER}
                        password = "postgres"
                        password = \${?APP_$name;format="snake,upper"$_DB_PASSWORD}
                    }
                    numThreads = 10
                }
            }
        }
    }
}
